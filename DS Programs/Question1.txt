/*Question1: Write a program containing following set operation functions for a given
 * set A (consider A to be array of integers)
 * a)Unique(A); return a set of the unique elements of a given set.
 * (For example unique([1,2,8,2,2,1,7,2,1,1])should return 1,2,8,7)
 * b)ismember(a,A);for checking an element's membership, with return value as true/false
 * c)Cardinality(A):to determine the cardinality of a set;
 * d)Powerset(A): to list all the elements of power set A
 * 
 */
#include<iostream>
using namespace std;
    int* Unique(int *A)
    {
        int x=0,size=0,i,j;
        while(A[x]!='\0')
        x++;
        x=x-1;
        for( i=0;i<x;i++)
        {
            int indicator=0;
            int a=A[i];
                for( j=i-1;j>=0;j--)
                {
                    if(a==A[j])
                    indicator=1;
                }
                if(indicator==0){
                    size++;
                }
    }
    int *array;
    array=new int[size];
    int q=0;
     for( i=0;i<x;i++)
        {
            int indicator=0;
            int a=A[i];
                for( j=i-1;j>=0;j--)
                {
                    if(a==A[j])
                    indicator=1;
                }
                if(indicator==0){
                    array[q++]=a;
                }
    }
    return array;
}
    int ismember(int b,int A[])
    {
      int x=0,i;
      while(A[x]!='\0')
      x++;
      int s=0;
        for( i=0;i<x;i++)
        {
            if(b==A[i])
            {
            s=1;
            break;
               }}
               if(s==1)
               return 1;
               else
               return 0;
    }
    void Cardinality(int A[])
    {
        int x=0;
        while(A[x]!='\0')
        x++;
        int count1=0;
        for(int i=0;i<x;i++)
        {
            int a=A[i];
            int indicator=0;
            for(int j=i-1;j>=0;j--)
            {
                if(a==A[j])
                {
                    indicator=1;
                }
            }
            if(indicator==0)
            count1++;
        }
        cout<<"Caridnality of the set is "<<count1<<endl;
    }
    void PowerSet(int *array)
    {
        int m=0,i,j,k;
        while(array[m]!='\0')
        {
        	m++;
		}
		m=m-1;
        for( i=0;i<m;i++)
        {
            int sum=0,size=0,q=1,n=0;
            if(i>0){
            for( j=1;j<=m-i;j++)
            size+=j;}
            else
            size=m;
            for(  j=0;j<size;j++){
                if(j>0)
             cout<<",";
                cout<<"{";
            int p=0,ind=0;
             
            if(q==m){
             n++;
            q=n;
            q++;
            
        }
        if(i==0)
        cout<<array[j];
        else
        cout<<array[n];
            while(p<i)
            {   cout<<",";
                cout<<array[q++];
               if(p==0)
               ind=q-1;
                p++;
                }
              if(q<m)
              for( k=0;k<m;k++)
                if(array[ind]==array[k])
                q=k+1;
                cout<<"}";
        }
        cout<<endl;
     }
}
int main()
{
    
    cout<<"Enter the size of the array\n";
    int size;
    cin>>size;
    int *arr;
	arr=new int[size];
    cout<<"Enter "<<size<<" elements of the array\n";
    for(int i=0;i<size;i++)
    cin>>arr[i];
    while(1)
    {
    cout<<"Enter 1:for UNIQUE\n";
    cout<<"Enter 2:for Ismember\n";
    cout<<"Enter 3:for Cardinality\n";
    cout<<"Enter 4:for PowerSet\n";
    int num;
    int *ary;
    cin>>num;
    switch(num)
    {
        case 1:
        cout<<"UNIQUE ELEMENTS ARE\n";
        size=0;
	ary=Unique(arr);
       while(ary[size]!='\0')
       size++;
       for(int i=0;i<size-1;i++)
	   cout<<ary[i]<<endl;
        break;
        case 2:
        cout<<"Enter which number you want to check out\n";
        int n1;
        cin>>n1;
       if(ismember(n1,arr)==0)
       cout<<"SORRY! Your number is not member of the set\n";
       else
       cout<<"CONGRATULATION! Your number is member of the set\n";
        break;
        case 3:
        Cardinality(arr);
        break;
        case 4:
        cout<<"POWERSET OF UNIQUE ELEMENTS ARE\n ";
        PowerSet(Unique(arr));
        break;
        default:cout<<"WRONG CHOICE!\n";
    }
    cout<<"Enter 0 for exit\n";
    int n;
    cin>>n;
    if(n==0)
    break;
    
}
return 0;}
              
                
        
        
                    
        